{"ast":null,"code":"import React from'react';import{useQuery}from'@tanstack/react-query';import{inspectionsAPI}from'../services/api';import{format}from'date-fns';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Inspections=()=>{const{data:inspections,isLoading}=useQuery({queryKey:['inspections'],queryFn:()=>inspectionsAPI.getAll().then(res=>res.data)});if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-railway-blue\"})});}const getStatusBadge=status=>{const statusClasses={passed:'bg-green-100 text-green-800',failed:'bg-red-100 text-red-800',pending:'bg-yellow-100 text-yellow-800',maintenance_required:'bg-orange-100 text-orange-800'};return/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \".concat(statusClasses[status]||'bg-gray-100 text-gray-800'),children:status.replace('_',' ').replace(/\\b\\w/g,l=>l.toUpperCase())});};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-200 pb-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"Inspections\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-600\",children:\"Track component inspection records\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Component\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Findings\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:inspections===null||inspections===void 0?void 0:inspections.map(inspection=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",children:inspection.component_id}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",children:inspection.inspection_type}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",children:format(new Date(inspection.inspection_date),'MMM dd, yyyy')}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:getStatusBadge(inspection.status)}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 text-sm text-gray-900\",children:inspection.findings||'N/A'})]},inspection.id))})]})})})]});};export default Inspections;","map":{"version":3,"names":["React","useQuery","inspectionsAPI","format","jsx","_jsx","jsxs","_jsxs","Inspections","data","inspections","isLoading","queryKey","queryFn","getAll","then","res","className","children","getStatusBadge","status","statusClasses","passed","failed","pending","maintenance_required","concat","replace","l","toUpperCase","map","inspection","component_id","inspection_type","Date","inspection_date","findings","id"],"sources":["/home/dharani/Desktop/SIH_RQR-main./SIH_RQR-main/frontend/src/pages/Inspections.tsx"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { inspectionsAPI } from '../services/api';\nimport { format } from 'date-fns';\n\nconst Inspections: React.FC = () => {\n  const { data: inspections, isLoading } = useQuery({\n    queryKey: ['inspections'],\n    queryFn: () => inspectionsAPI.getAll().then(res => res.data),\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-railway-blue\"></div>\n      </div>\n    );\n  }\n\n  const getStatusBadge = (status: string) => {\n    const statusClasses = {\n      passed: 'bg-green-100 text-green-800',\n      failed: 'bg-red-100 text-red-800',\n      pending: 'bg-yellow-100 text-yellow-800',\n      maintenance_required: 'bg-orange-100 text-orange-800',\n    };\n    \n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusClasses[status as keyof typeof statusClasses] || 'bg-gray-100 text-gray-800'}`}>\n        {status.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n      </span>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"border-b border-gray-200 pb-4\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Inspections</h1>\n        <p className=\"mt-1 text-sm text-gray-600\">Track component inspection records</p>\n      </div>\n\n      <div className=\"card overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Component\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Findings\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {inspections?.map((inspection: any) => (\n                <tr key={inspection.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {inspection.component_id}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                    {inspection.inspection_type}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                    {format(new Date(inspection.inspection_date), 'MMM dd, yyyy')}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {getStatusBadge(inspection.status)}\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-900\">\n                    {inspection.findings || 'N/A'}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Inspections;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}